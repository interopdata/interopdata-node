/* tslint:disable */
/* eslint-disable */
/**
 * Interopdata API
 * The Interopdata public API
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DataExportDataset
 */
export interface DataExportDataset {
    /**
     * 
     * @type {string}
     * @memberof DataExportDataset
     */
    id: string;
    /**
     * 
     * @type {object}
     * @memberof DataExportDataset
     */
    name: Record<string, string>;
    /**
     * 
     * @type {object}
     * @memberof DataExportDataset
     */
    description: Record<string, string>;
    /**
     * 
     * @type {object}
     * @memberof DataExportDataset
     */
    icon: Record<string, string>;
    /**
     * 
     * @type {string}
     * @memberof DataExportDataset
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof DataExportDataset
     */
    size?: string;
}

/**
 * Check if a given object implements the DataExportDataset interface.
 */
export function instanceOfDataExportDataset(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "icon" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function DataExportDatasetFromJSON(json: any): DataExportDataset {
    return DataExportDatasetFromJSONTyped(json, false);
}

export function DataExportDatasetFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataExportDataset {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'],
        'icon': json['icon'],
        'status': json['status'],
        'size': !exists(json, 'size') ? undefined : json['size'],
    };
}

export function DataExportDatasetToJSON(value?: DataExportDataset | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'icon': value.icon,
        'status': value.status,
        'size': value.size,
    };
}


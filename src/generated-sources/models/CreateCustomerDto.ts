/* tslint:disable */
/* eslint-disable */
/**
 * Interopdata API
 * The Interopdata public API
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCustomerDto
 */
export interface CreateCustomerDto {
    /**
     * A unique identifier of the customer in your system.
     * @type {string}
     * @memberof CreateCustomerDto
     */
    id: string;
    /**
     * Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
     * @type {string}
     * @memberof CreateCustomerDto
     */
    email?: string;
    /**
     * The customer’s full name or business name.
     * @type {string}
     * @memberof CreateCustomerDto
     */
    name?: string;
    /**
     * An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
     * @type {string}
     * @memberof CreateCustomerDto
     */
    description?: string;
    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     * @type {object}
     * @memberof CreateCustomerDto
     */
    metadata?: object;
    /**
     * Customer’s preferred languages, ordered by preference.
     * @type {Array<string>}
     * @memberof CreateCustomerDto
     */
    preferredLocales?: Array<string>;
}

/**
 * Check if a given object implements the CreateCustomerDto interface.
 */
export function instanceOfCreateCustomerDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function CreateCustomerDtoFromJSON(json: any): CreateCustomerDto {
    return CreateCustomerDtoFromJSONTyped(json, false);
}

export function CreateCustomerDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCustomerDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'preferredLocales': !exists(json, 'preferredLocales') ? undefined : json['preferredLocales'],
    };
}

export function CreateCustomerDtoToJSON(value?: CreateCustomerDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'email': value.email,
        'name': value.name,
        'description': value.description,
        'metadata': value.metadata,
        'preferredLocales': value.preferredLocales,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Interopdata API
 * The Interopdata public API
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Locale
 */
export interface Locale {
    /**
     * 
     * @type {string}
     * @memberof Locale
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Locale
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof Locale
     */
    locale: string;
    /**
     * 
     * @type {boolean}
     * @memberof Locale
     */
    _default: boolean;
}

/**
 * Check if a given object implements the Locale interface.
 */
export function instanceOfLocale(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "locale" in value;
    isInstance = isInstance && "_default" in value;

    return isInstance;
}

export function LocaleFromJSON(json: any): Locale {
    return LocaleFromJSONTyped(json, false);
}

export function LocaleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Locale {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'displayName': json['displayName'],
        'locale': json['locale'],
        '_default': json['default'],
    };
}

export function LocaleToJSON(value?: Locale | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'displayName': value.displayName,
        'locale': value.locale,
        'default': value._default,
    };
}

